import type { Metadata } from 'next';
import { NextIntlClientProvider, hasLocale } from 'next-intl';
import localFont from 'next/font/local';
import { notFound } from 'next/navigation';

import { routing } from '@/i18n/routing';

import ReduxProvider from '@/app/_providers/ReduxProvider';
import TanStackQueryProvider from '@/app/_providers/TanStackQueryProvider';

import '../_styles/globals.css';

const pretendard = localFont({
  src: '../_fonts/PretendardVariable.woff2',
  variable: '--font-local-pretendard',
  display: 'swap',
  weight: '400 600 700 800',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html lang={locale}>
      <body className={`${pretendard.variable} antialiased`}>
        <NextIntlClientProvider>
          <ReduxProvider>
            <TanStackQueryProvider>{children}</TanStackQueryProvider>
          </ReduxProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
